/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FindDialog.java
 *
 * Created on 16/10/2009, 11:39:03 ص
 */
package dialogs;

import dbTools.DBManager;
import java.awt.event.ActionEvent;
import java.io.File;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author alilo
 */
public class BackupDBDialog extends dialogs.MyJDialog {

    private static BackupDBDialog instance;
    private String backupPath;
    private JFileChooser chooser;
    
    private final Runnable initDirChooser = new Runnable() {

        @Override
        public void run() {
            chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);
            browseLinkButton.setEnabled(true);
        }
    };

    /**
     * Creates new form FindDialog
     *
     * @param parent
     * @param modal
     */
    public BackupDBDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal, false);
        initComponents();
        setLocationRelativeTo(null);
        waitLabel.setVisible(false);
        backupPath = DBManager.getInstance().getBackupDir();
        pathArea.setText("Dans: " + backupPath);
        new Thread(initDirChooser).start();
    }

    public static BackupDBDialog getInstance() {
        if (instance == null) {
            return new BackupDBDialog(null, true);
        } else {
            return instance;
        }
    }

    /**
     * Satart backing up database .
     */
    public void startBackup() {
        while (backupPath == null) {
            JOptionPane.showMessageDialog(this, "Sélectionner l'emplacement de sauvegarde SVP!", "Attention", JOptionPane.ERROR_MESSAGE);
            browse();
        }
        new Thread(new Runnable() {

            @Override
            public void run() {
                saveLinkButton.setVisible(false);
                waitLabel.setVisible(true);
                startAction.setEnabled(false);
                browseAction.setEnabled(false);
                DBManager.getInstance().backupDB(backupPath);
                setVisible(false);
            }
        }).start();
    }
    private final Action startAction = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            startBackup();
        }
    };

    public void browse() {
        if (chooser == null) {
            initDirChooser.run();
        }
        chooser.setCurrentDirectory(new File(backupPath));
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File f = chooser.getSelectedFile();
            backupPath = f.getPath();
            pathArea.setText("Dans: " + f.getPath());
        }
    }
    private final Action browseAction = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            browse();
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        imagePanel1 = new myComponents.ImagePanel();
        titleLabel = new javax.swing.JLabel();
        pathArea = new javax.swing.JTextArea();
        browseLinkButton = new com.l2fprod.common.swing.JLinkButton();
        saveLinkButton = new com.l2fprod.common.swing.JLinkButton();
        imagePanel2 = new myComponents.ImagePanel();
        waitLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Sauvegarde");
        setModal(true);
        setPreferredSize(new java.awt.Dimension(400, 450));
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        imagePanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        imagePanel1.setImgLocationPath("/res/png/back2.png");
        imagePanel1.setLayout(new java.awt.GridBagLayout());

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Archiver vos données SVP!");
        titleLabel.setMinimumSize(new java.awt.Dimension(239, 40));
        titleLabel.setPreferredSize(new java.awt.Dimension(278, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        imagePanel1.add(titleLabel, gridBagConstraints);

        pathArea.setEditable(false);
        pathArea.setColumns(20);
        pathArea.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        pathArea.setForeground(new java.awt.Color(0, 51, 255));
        pathArea.setLineWrap(true);
        pathArea.setRows(2);
        pathArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 5));
        pathArea.setMinimumSize(new java.awt.Dimension(110, 34));
        pathArea.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        imagePanel1.add(pathArea, gridBagConstraints);

        browseLinkButton.setAction(browseAction);
        browseLinkButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));
        browseLinkButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/actions/browse24.png"))); // NOI18N
        browseLinkButton.setText("Selectionner un autre emplacement de sauvegarde?");
        browseLinkButton.setEnabled(false);
        browseLinkButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        browseLinkButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        imagePanel1.add(browseLinkButton, gridBagConstraints);

        saveLinkButton.setAction(startAction);
        saveLinkButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/actions/save24.png"))); // NOI18N
        saveLinkButton.setText("Clicker ici pour Archiver");
        saveLinkButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveLinkButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveLinkButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        imagePanel1.add(saveLinkButton, gridBagConstraints);

        imagePanel2.setImgLocationPath("/res/icons/dbBackup128.png");
        imagePanel2.setLayout(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        imagePanel1.add(imagePanel2, gridBagConstraints);

        waitLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        waitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        waitLabel.setText("Archivage en cours patientez SVP! .....");
        waitLabel.setMinimumSize(new java.awt.Dimension(260, 34));
        waitLabel.setPreferredSize(new java.awt.Dimension(260, 34));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        imagePanel1.add(waitLabel, gridBagConstraints);

        getContentPane().add(imagePanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        BackupDBDialog.getInstance().setVisible(true);
        System.exit(0);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.l2fprod.common.swing.JLinkButton browseLinkButton;
    private myComponents.ImagePanel imagePanel1;
    private myComponents.ImagePanel imagePanel2;
    private javax.swing.JTextArea pathArea;
    private com.l2fprod.common.swing.JLinkButton saveLinkButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel waitLabel;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
}
