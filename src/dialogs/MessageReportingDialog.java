/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dialogs;

import dbTools.DBManager;
import dbTools.DBSettings;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import tools.MessageReporting;

/**
 *
 * @author alilo
 */
public class MessageReportingDialog extends javax.swing.JDialog {

    final static SimpleAttributeSet BOLD_BLACK = new SimpleAttributeSet();
    final static SimpleAttributeSet BLACK = new SimpleAttributeSet();
    final static SimpleAttributeSet RED = new SimpleAttributeSet();
    final static SimpleAttributeSet ORANGE = new SimpleAttributeSet();
    final static SimpleAttributeSet BLEU = new SimpleAttributeSet();
    // Best to reuse attribute sets as much as possible.
    static {

        StyleConstants.setForeground(BOLD_BLACK, Color.black);
        StyleConstants.setBold(BOLD_BLACK, true);
        //StyleConstants.setFontFamily(BOLD_BLACK, "Helvetica");
        StyleConstants.setFontSize(BOLD_BLACK, 14);

        StyleConstants.setForeground(BLACK, Color.black);
        //StyleConstants.setFontFamily(BLACK, "Helvetica");
        StyleConstants.setFontSize(BLACK, 14);

        StyleConstants.setForeground(RED, Color.RED);
        StyleConstants.setBold(RED, true);
        //StyleConstants.setFontFamily(RED, "Tahoma");
        StyleConstants.setFontSize(RED, 14);
        
        StyleConstants.setForeground(ORANGE, Color.ORANGE);
        StyleConstants.setBold(ORANGE, true);
        //StyleConstants.setFontFamily(RED, "Tahoma");
        StyleConstants.setFontSize(ORANGE, 14);
        
        StyleConstants.setForeground(BLEU, Color.BLUE);
        StyleConstants.setBold(BLEU, true);
        //StyleConstants.setFontFamily(RED, "Tahoma");
        StyleConstants.setFontSize(BLEU, 14);
    }
    
    private static MessageReportingDialog dialog;
    private final Icon infoIcon = new ImageIcon(getClass().getResource("/res/icons/info48.png"));
    private final Icon warnIcon = new ImageIcon(getClass().getResource("/res/icons/warning48.png"));
    private final Icon errorIcon = new ImageIcon(getClass().getResource("/res/icons/bug48.png"));

    public MessageReportingDialog() {
        this(null, true);
    }

    public void setMessage(String mess, java.lang.Integer messType) {
        if (messType == MessageReporting.INFO_MESSAGE) {
            messTypeLabel.setIcon(infoIcon);
            messTypeLabel.setText("Information!");
            messTypeLabel.setForeground(Color.BLUE);
        } else {
            if (messType == MessageReporting.WARNING_MESSAGE) {
                messTypeLabel.setIcon(warnIcon);
                messTypeLabel.setText("Attention!");
                messTypeLabel.setForeground(Color.ORANGE);
            } else {
                if (messType == MessageReporting.ERROR_MESSAGE) {
                    messTypeLabel.setIcon(errorIcon);
                    messTypeLabel.setText("Erreur!");
                    messTypeLabel.setForeground(Color.RED);
                }
            }
        }

        try {
            messTextArea.getDocument().remove(0, messTextArea.getDocument().getLength());
            messTextArea.getDocument().insertString(
                    messTextArea.getDocument().getLength(), mess, BLACK);
        } catch (BadLocationException ex) {
            Logger.getLogger(MessageReporting.class.getName()).log(Level.SEVERE, "offfffffff", ex);
        }
        fixeB.setEnabled(messType == MessageReporting.ERROR_MESSAGE);
        setLocationRelativeTo(null);
        setVisible(true);
    }
    
    public static void showMessage(String mess, java.lang.Integer messType) {
        if (dialog == null) {
            dialog = new MessageReportingDialog();
        }
        dialog.setMessage(mess, messType);
    }

    /**
     * Creates new form MessageReportingDialog
     * @param parent
     * @param modal
     */
    public MessageReportingDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void close(){
        setVisible(false);
        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        topPanel = new javax.swing.JPanel();
        messTypeLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messTextArea = new javax.swing.JTextPane();
        buttomPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        fixeB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Message");
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(550, 350));
        setPreferredSize(new java.awt.Dimension(550, 350));

        topPanel.setFocusable(false);
        topPanel.setLayout(new javax.swing.BoxLayout(topPanel, javax.swing.BoxLayout.LINE_AXIS));

        messTypeLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        messTypeLabel.setForeground(new java.awt.Color(255, 0, 0));
        messTypeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/bug48.png"))); // NOI18N
        messTypeLabel.setText("Erreur!");
        messTypeLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 1));
        topPanel.add(messTypeLabel);

        getContentPane().add(topPanel, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " DÃ©tails   ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jScrollPane1.setFocusable(false);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 49));

        messTextArea.setEditable(false);
        messTextArea.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        messTextArea.setFocusable(false);
        jScrollPane1.setViewportView(messTextArea);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        buttomPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 3, 3));
        buttomPanel.setLayout(new java.awt.GridBagLayout());

        saveButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/actions/ok24.png"))); // NOI18N
        saveButton.setText("  Humm!");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        buttomPanel.add(saveButton, gridBagConstraints);

        fixeB.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        fixeB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tool24.png"))); // NOI18N
        fixeB.setText("Maintenance");
        fixeB.setEnabled(false);
        fixeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fixeBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        buttomPanel.add(fixeB, gridBagConstraints);

        getContentPane().add(buttomPanel, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        close();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void fixeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fixeBActionPerformed
        close();
        DBManager.getInstance().configServer();
    }//GEN-LAST:event_fixeBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MessageReportingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MessageReportingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MessageReportingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MessageReportingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                MessageReportingDialog.showMessage("salem alikoum alilo",  MessageReporting.ERROR_MESSAGE);
                MessageReportingDialog.showMessage("salem ",  MessageReporting.WARNING_MESSAGE);
                MessageReportingDialog.showMessage("salem alilo", MessageReporting.INFO_MESSAGE);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                //dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttomPanel;
    private javax.swing.JButton fixeB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane messTextArea;
    private javax.swing.JLabel messTypeLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
