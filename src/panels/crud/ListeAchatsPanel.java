/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CtegoriePanel.java
 *
 * Created on 17/10/2009, 11:25:33 ص
 */
package panels.crud;

import dao.AchatDAO;
import entities.Client;
import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Dimension;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import myComponents.MyJFrame;
import myComponents.MyJTable;
import panels.ResultSet2Table_Panel;
import entities.Achat;
import myComponents.MyJComboBox;
import panels.maj.MajAchatPanel;
import tools.DateTools;

/**
 *
 * @author alilo
 */
public class ListeAchatsPanel extends ResultSet2Table_Panel<Achat, AchatDAO> {
    {
        setPreferredSize(new Dimension(600, 400));
        setMajPanel(new MajAchatPanel(this));
        setFilterShortcut("CTRL", "T");
    }
    
    private final ListeFournissPanel fournissPanel = new ListeFournissPanel(this, false).getNavigNEditList();

    public ListeAchatsPanel(Container owner, boolean checkable) {
        super(owner, checkable);
        initComponents();
        add(mainPanel, BorderLayout.CENTER);
        getStatusPanel().add(recettePanel);
        configCalendar();
        setMasterPanel(fournissPanel, "ID_FR");
        selFournissPanel.setSelListPanel(fournissPanel);
    }

    private void configCalendar() {
        // set the date to yesterday
        Calendar c = Calendar.getInstance();
        c.add(Calendar.DATE, -1);
        dateChooser.setDate(c.getTime());

        // add date change listener.
        dateChooser.addPropertyChangeListener("date", new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                dateRadioBoxActionPerformed(null);
            }
        });
    }

    @Override
    public ListeAchatsPanel initTableView() {
        getTable().setColumnVisible("ID", false);
        getTable().setColumnVisible("ID_FR", false);
        getTable().setColumnsPreferredWidths(new int[]{20});
        return this;
    }

    @Override
    public AchatDAO getTableDAO() {
        return AchatDAO.getInstance();
    }

    @Override
    public void delete() {
        if (isAllowDelete() && !getModel().getSelectedRows().isEmpty()) {
            String confMess = "Voullez-vous vraiment supprimer les éléments séléctionnés?";
            int rep = JOptionPane.showConfirmDialog(this, confMess, "Suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (rep == JOptionPane.YES_OPTION) {
                for (Integer id : getModel().getSelectedIDs()) {
                    Achat achToDelete = getTableDAO().getObjectByID(id);
                    if (achToDelete.isValide()) {
                        String mess = "Attention! L': " + achToDelete + "\nest déja validé, vous ne pouvez pas le supprimer."
                                + "\nSi vous-voulez vraiment le supprimer vous devez l'annuler d'abord!"
                                + "\nPour annuler, utilliser la fonction 'Annuler' en bas du fenêtre de modification.";
                        rep = JOptionPane.showConfirmDialog(this, mess, "Attention!", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
                        if (rep == JOptionPane.CANCEL_OPTION) {
                            break;
                        }
                    } else {
                        getTableDAO().delete(id);
                    }
                }
                reload();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        recettePanel = new javax.swing.JPanel();
        recetteLinkButton = new com.l2fprod.common.swing.JLinkButton();
        filterPanel = new javax.swing.JPanel();
        allRadioBox = new javax.swing.JRadioButton();
        todayRadioBox = new javax.swing.JRadioButton();
        dateRadioBox = new javax.swing.JRadioButton();
        dateChooser = new myComponents.MyJDateChooser();
        clientCheckBox = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        selFournissPanel = new panels.SelectionPanel<>();

        recettePanel.setLayout(new javax.swing.BoxLayout(recettePanel, javax.swing.BoxLayout.LINE_AXIS));

        recetteLinkButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 3));
        recetteLinkButton.setForeground(new java.awt.Color(0, 0, 204));
        recetteLinkButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/dollar16.png"))); // NOI18N
        recetteLinkButton.setText("Recette:");
        recetteLinkButton.setToolTipText("Clicker ici pour afficher les détails");
        recetteLinkButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        recetteLinkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recetteLinkButtonActionPerformed(evt);
            }
        });
        recettePanel.add(recetteLinkButton);

        setMinimumSize(new java.awt.Dimension(400, 200));
        setLayout(new java.awt.BorderLayout());

        filterPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 2, 2, 2));
        java.awt.GridBagLayout filterPanelLayout = new java.awt.GridBagLayout();
        filterPanelLayout.columnWidths = new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
        filterPanelLayout.rowHeights = new int[] {0, 3, 0};
        filterPanel.setLayout(filterPanelLayout);

        buttonGroup1.add(allRadioBox);
        allRadioBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        allRadioBox.setSelected(true);
        allRadioBox.setText("Toutes ");
        allRadioBox.setBorder(null);
        allRadioBox.setFocusable(false);
        allRadioBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allRadioBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        filterPanel.add(allRadioBox, gridBagConstraints);

        buttonGroup1.add(todayRadioBox);
        todayRadioBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todayRadioBox.setText("Aujourd'hui ");
        todayRadioBox.setBorder(null);
        todayRadioBox.setFocusable(false);
        todayRadioBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todayRadioBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        filterPanel.add(todayRadioBox, gridBagConstraints);

        buttonGroup1.add(dateRadioBox);
        dateRadioBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateRadioBox.setText("Le:");
        dateRadioBox.setBorder(null);
        dateRadioBox.setFocusable(false);
        dateRadioBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateRadioBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        filterPanel.add(dateRadioBox, gridBagConstraints);

        dateChooser.setFocusable(false);
        dateChooser.setMinimumSize(new java.awt.Dimension(105, 19));
        dateChooser.setPreferredSize(new java.awt.Dimension(105, 19));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, dateRadioBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), dateChooser, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        filterPanel.add(dateChooser, gridBagConstraints);

        clientCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        clientCheckBox.setText("Fournisseur:");
        clientCheckBox.setBorder(null);
        clientCheckBox.setFocusable(false);
        clientCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        clientCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientCheckBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        filterPanel.add(clientCheckBox, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        filterPanel.add(jSeparator1, gridBagConstraints);

        selFournissPanel.setDescription("Tous!");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        filterPanel.add(selFournissPanel, gridBagConstraints);

        add(filterPanel, java.awt.BorderLayout.NORTH);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents
    private void todayRadioBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todayRadioBoxActionPerformed
        Date today = new Date();
        String date = DateTools.SHORT_DATE.format(today);
        if (todayRadioBox.isSelected()) {
            filterList("Date", date, MyJTable.EXACT_MATCH_FILTER);
        } else {
            filterList("Date", "", MyJTable.ANY_MATCH_FILTER);
        }
    }//GEN-LAST:event_todayRadioBoxActionPerformed

    private void dateRadioBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateRadioBoxActionPerformed
        if (dateRadioBox.isSelected()) {
            filterList("Date", dateChooser.getFormatedDate(DateTools.SHORT_DATE), MyJTable.EXACT_MATCH_FILTER);
        } else {
            filterList("Date", "", MyJTable.ANY_MATCH_FILTER);
        }
    }//GEN-LAST:event_dateRadioBoxActionPerformed

    private void clientCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientCheckBoxActionPerformed
        if (clientCheckBox.isSelected()) {
            selFournissPanel.showSelList();
        } else {
            fournissPanel.clearSelection();
        }
    }//GEN-LAST:event_clientCheckBoxActionPerformed

    private void allRadioBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allRadioBoxActionPerformed
        if (allRadioBox.isSelected()) {
            filterList("Date", "", MyJTable.ANY_MATCH_FILTER);
        }
    }//GEN-LAST:event_allRadioBoxActionPerformed

    private void recetteLinkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recetteLinkButtonActionPerformed
        main.MainApp.getInstance().recette();
    }//GEN-LAST:event_recetteLinkButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton allRadioBox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox clientCheckBox;
    private myComponents.MyJDateChooser dateChooser;
    private javax.swing.JRadioButton dateRadioBox;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JSeparator jSeparator1;
    private com.l2fprod.common.swing.JLinkButton recetteLinkButton;
    private javax.swing.JPanel recettePanel;
    private panels.SelectionPanel<Client> selFournissPanel;
    private javax.swing.JRadioButton todayRadioBox;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        MyJFrame frame = new MyJFrame();
        //frame.setExtendedState(Frame.MAXIMIZED_BOTH);
        frame.setTitle("Gestion des Achats");
        frame.getContentPane().add(new ListeAchatsPanel(frame, false).initTableView(), BorderLayout.CENTER);
        frame.pack();

        frame.setVisible(true);
        frame.setLocationRelativeTo(null);
    }
}
